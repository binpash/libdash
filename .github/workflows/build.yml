name: Main workflow

on:
  pull_request:
  push:
  schedule:
    - cron: '5 14 * * *'

jobs:
  check-version-numbers:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check version numbers
        run: ./version.sh
  
  build-and-package-python:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install dependencies (libtool, aclocal, autoconf)
        run: |
           if [ "$RUNNER_OS" = "Linux" ]; then
             sudo apt-get install libtool automake
           elif [ "$RUNNER_OS" = "macOS" ]; then
             brew install libtool autoconf automake
           else
             echo Unsupported RUNNER_OS=$RUNNER_OS
             exit 1
           fi
           sudo pip3 install build
      
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build Python packages
        run: |
          python3 -m build --sdist --wheel --outdir dist/
          echo BUILT:
          ls dist
      
      - name: Install Python packages from wheel
        run: sudo pip3 install dist/libdash-*.whl
      
      - name: Test Python bindings
        run: make -C python test
            
      - name: Upload macOS wheel
        uses: actions/upload-artifact@v2
        if: contains(matrix.os, 'macos')
        with:
          name: bdist.macos
          path: dist/libdash-*.whl
      
      - name: Upload Linux wheel
        uses: actions/upload-artifact@v2
        if: contains(matrix.os, 'ubuntu')
        with:
          name: bdist.linux
          path: dist/libdash-*.whl
      
      - name: Upload source distribution (from Linux)
        uses: actions/upload-artifact@v2
        if: contains(matrix.os, 'ubuntu')
        with:
          name: sdist
          path: dist/libdash-*.tar.gz
      
  build-both-and-compare:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        ocaml-compiler:
          - 4.12.x
          - 4.13.x
          - 4.14.x

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: avsm/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
                             
      - name: Install OCaml bindings
        run: opam install .
        
      - name: Test OCaml bindings
        run: opam exec -- make -C ocaml test
 
        # we don't reuse the wheels so that all of the CI runs can happen concurrently, i.e., we can test OCaml and Python at the same time
      - name: Install Python directly
        run: sudo python3 setup.py install
        
      - name: Compare OCaml and Python bindings
        run: opam exec -- make -C test test

  prerelease:
    needs:
      - check-version-numbers
      - build-and-package-python
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
      
    steps:
      - name: Download distributions
        uses: actions/download-artifact@v2

      - name: Rename distributions
        run: |
          mkdir dist
          VERSION=$(./version.sh)
          mv bdist.linux/libdash-*.whl dist/libdash-$VERSION-py3-none-linux_x86_64.whl
          mv bdist.macos/libdash-*.whl dist/libdash-$VERSION-py3-none-macosx.whl
          mv sdist/libdash-*.tar.gz dist/
  
      - name: Deploy 'latest' release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Python source and binary distributions"
          files: |
            dist/*

        
        
        
